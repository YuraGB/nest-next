{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _s = $RefreshSig$();\n\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation {\\n  createDDArticle(input: {\\n    href: \\\"DDArticle\\\",\\n    label:\\\"DDArticle\\\",\\n    shirtDescription:\\\"test shirtDesc\\\", \\n    source:\\\"sourceTest\\\",\\n    date: \\\"Wed Jun 17 2020 14:12:43 GMT+0300 (Eastern European Summer Time)\\\",\\n    picture: \\\"testPictufgre\\\",\\n    description: \\\"Deeeeeeeeeescription\\\"\\n  })\\n  {\\n    href, label, shirtDescription, source, date, description\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport * as React from 'react';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport img from \"../../assets/background/doomsdayClock.jpg\";\nimport Layout from \"../../hoc/Layout/Layout\";\nvar query = gql(_templateObject());\n\nvar Index = function Index(props) {\n  _s();\n\n  var _useQuery = useQuery(query),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data,\n      fetchMore = _useQuery.fetchMore,\n      networkStatus = _useQuery.networkStatus;\n\n  console.log(loading, error, data, fetchMore, networkStatus);\n  return __jsx(Layout, null, __jsx(\"div\", {\n    className: _JSXStyle.dynamic([[\"2054690565\", [img]]])\n  }, \"Hello!!!!!!!!!!\"), __jsx(_JSXStyle, {\n    id: \"2054690565\",\n    dynamic: [img]\n  }, \"main{background:url(\".concat(img, \") no-repeat;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3l1cmlpL1Byb2plY3RzL25lc3RhbmRuZXh0L3BhZ2VzL3ZpZXdzL0luZGV4LnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFpQ2lCLEFBR2dGLHVEQUMzRCIsImZpbGUiOiIvaG9tZS95dXJpaS9Qcm9qZWN0cy9uZXN0YW5kbmV4dC9wYWdlcy92aWV3cy9JbmRleC50c3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBOZXh0UGFnZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZyc7XG5pbXBvcnQgeyB1c2VRdWVyeSB9IGZyb20gJ0BhcG9sbG8vcmVhY3QtaG9va3MnXG5cbmltcG9ydCBpbWcgZnJvbSBcIi4uLy4uL2Fzc2V0cy9iYWNrZ3JvdW5kL2Rvb21zZGF5Q2xvY2suanBnXCI7XG5pbXBvcnQgTGF5b3V0IGZyb20gXCIuLi8uLi9ob2MvTGF5b3V0L0xheW91dFwiO1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUFwb2xsbyB9IGZyb20gJy4uLy4uL2xpYi9hcG9sbG9DbGllbnQnO1xuXG5jb25zdCBxdWVyeSA9IGdxbGBcbm11dGF0aW9uIHtcbiAgY3JlYXRlRERBcnRpY2xlKGlucHV0OiB7XG4gICAgaHJlZjogXCJEREFydGljbGVcIixcbiAgICBsYWJlbDpcIkREQXJ0aWNsZVwiLFxuICAgIHNoaXJ0RGVzY3JpcHRpb246XCJ0ZXN0IHNoaXJ0RGVzY1wiLCBcbiAgICBzb3VyY2U6XCJzb3VyY2VUZXN0XCIsXG4gICAgZGF0ZTogXCJXZWQgSnVuIDE3IDIwMjAgMTQ6MTI6NDMgR01UKzAzMDAgKEVhc3Rlcm4gRXVyb3BlYW4gU3VtbWVyIFRpbWUpXCIsXG4gICAgcGljdHVyZTogXCJ0ZXN0UGljdHVmZ3JlXCIsXG4gICAgZGVzY3JpcHRpb246IFwiRGVlZWVlZWVlZWVzY3JpcHRpb25cIlxuICB9KVxuICB7XG4gICAgaHJlZiwgbGFiZWwsIHNoaXJ0RGVzY3JpcHRpb24sIHNvdXJjZSwgZGF0ZSwgZGVzY3JpcHRpb25cbiAgfVxufWA7XG5cbmNvbnN0IEluZGV4OiBOZXh0UGFnZSA9IChwcm9wczogYW55KSA9PiB7XG4gICAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSwgZmV0Y2hNb3JlLCBuZXR3b3JrU3RhdHVzIH0gPSB1c2VRdWVyeShxdWVyeSk7XG5cbiAgICBjb25zb2xlLmxvZyhsb2FkaW5nLCBlcnJvciwgZGF0YSwgZmV0Y2hNb3JlLCBuZXR3b3JrU3RhdHVzICk7XG4gICAgcmV0dXJuIChcbiAgICAgICAgPExheW91dD5cbiAgICAgICAgICAgIDxkaXY+SGVsbG8hISEhISEhISEhPC9kaXY+XG4gICAgICAgICAgICA8c3R5bGUganN4IGdsb2JhbD5cbiAgICAgICAgICAgICAgICB7YFxuICAgICAgICAgICAgICAgICAgICBtYWluIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHVybCgke2ltZ30pIG5vLXJlcGVhdDtcbiAgICAgICAgICAgICAgICAgICAgfSAgICAgICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgYH1cbiAgICAgICAgICAgIDwvc3R5bGU+XG4gICAgICAgIDwvTGF5b3V0PlxuICAgICk7XG59O1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0U3RhdGljUHJvcHMoKSB7XG4gICAgY29uc3QgYXBvbGxvQ2xpZW50ID0gaW5pdGlhbGl6ZUFwb2xsbygpO1xuXG4gICAgYXdhaXQgYXBvbGxvQ2xpZW50Lm11dGF0ZSh7XG4gICAgICAgIG11dGF0aW9uOiBxdWVyeVxuICAgIH0pO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgICAgcHJvcHM6IHtcbiAgICAgICAgICAgIGluaXRpYWxBcG9sbG9TdGF0ZTogYXBvbGxvQ2xpZW50LmNhY2hlLmV4dHJhY3QoKSxcbiAgICAgICAgfSxcbiAgICAgICAgdW5zdGFibGVfcmV2YWxpZGF0ZTogMSxcbiAgICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEluZGV4OyJdfQ== */\\n/*@ sourceURL=/home/yurii/Projects/nestandnext/pages/views/Index.tsx */\")));\n};\n\n_s(Index, \"mFEtHJ551DdfKMGceX+yK2BKkLk=\", false, function () {\n  return [useQuery];\n});\n\n_c = Index;\nexport var __N_SSG = true;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/yurii/Projects/nestandnext/pages/views/Index.tsx"],"names":["React","gql","useQuery","img","Layout","query","Index","props","loading","error","data","fetchMore","networkStatus","console","log"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AAEA,OAAOC,GAAP,MAAgB,2CAAhB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAGA,IAAMC,KAAK,GAAGJ,GAAH,mBAAX;;AAgBA,IAAMK,KAAe,GAAG,SAAlBA,KAAkB,CAACC,KAAD,EAAgB;AAAA;;AAAA,kBACuBL,QAAQ,CAACG,KAAD,CAD/B;AAAA,MAC5BG,OAD4B,aAC5BA,OAD4B;AAAA,MACnBC,KADmB,aACnBA,KADmB;AAAA,MACZC,IADY,aACZA,IADY;AAAA,MACNC,SADM,aACNA,SADM;AAAA,MACKC,aADL,aACKA,aADL;;AAGpCC,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CC,aAA7C;AACA,SACI,MAAC,MAAD,QACI;AAAA,kDAI8BT,GAJ9B;AAAA,uBADJ;AAAA;AAAA,cAKkCA,GALlC;AAAA,mCAKkCA,GALlC,0hFADJ;AAYH,CAhBD;;GAAMG,K;UACyDJ,Q;;;KADzDI,K;;AAiCN,eAAeA,KAAf","sourcesContent":["import * as React from 'react';\nimport { NextPage } from 'next';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks'\n\nimport img from \"../../assets/background/doomsdayClock.jpg\";\nimport Layout from \"../../hoc/Layout/Layout\";\nimport { initializeApollo } from '../../lib/apolloClient';\n\nconst query = gql`\nmutation {\n  createDDArticle(input: {\n    href: \"DDArticle\",\n    label:\"DDArticle\",\n    shirtDescription:\"test shirtDesc\", \n    source:\"sourceTest\",\n    date: \"Wed Jun 17 2020 14:12:43 GMT+0300 (Eastern European Summer Time)\",\n    picture: \"testPictufgre\",\n    description: \"Deeeeeeeeeescription\"\n  })\n  {\n    href, label, shirtDescription, source, date, description\n  }\n}`;\n\nconst Index: NextPage = (props: any) => {\n    const { loading, error, data, fetchMore, networkStatus } = useQuery(query);\n\n    console.log(loading, error, data, fetchMore, networkStatus );\n    return (\n        <Layout>\n            <div>Hello!!!!!!!!!!</div>\n            <style jsx global>\n                {`\n                    main {\n                        background: url(${img}) no-repeat;\n                    }                    \n                `}\n            </style>\n        </Layout>\n    );\n};\n\nexport async function getStaticProps() {\n    const apolloClient = initializeApollo();\n\n    await apolloClient.mutate({\n        mutation: query\n    });\n\n    return {\n        props: {\n            initialApolloState: apolloClient.cache.extract(),\n        },\n        unstable_revalidate: 1,\n    }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}