{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport * as React from 'react';\nimport Layout from \"../../hoc/Layout/Layout\";\n\nvar Index = function Index(_ref) {\n  var query = _ref.query;\n  var greetName = query.title ? query.title : 'World';\n  return __jsx(Layout, null, __jsx(\"div\", null, \"Hello!!!!!!!!!, \", greetName, \"!\"));\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var query;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            query = ctx.query;\n            return _context.abrupt(\"return\", {\n              query: query\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/home/yurii/Projects/nestandnext/pages/views/Index.tsx"],"names":["React","Layout","Index","query","greetName","title","getInitialProps","ctx"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;;AAMA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC1C,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAN,GAAcF,KAAK,CAACE,KAApB,GAA4B,OAA9C;AACA,SACI,MAAC,MAAD,QACI,uCAAsBD,SAAtB,MADJ,CADJ;AAKH,CAPD;;KAAMF,K;;AASNA,KAAK,CAACI,eAAN;AAAA,uEAAwB,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACZJ,YAAAA,KADY,GACFI,GADE,CACZJ,KADY;AAAA,6CAEb;AAAEA,cAAAA,KAAK,EAALA;AAAF,aAFa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAeD,KAAf","sourcesContent":["import * as React from 'react';\nimport { NextPage, NextPageContext } from 'next';\nimport Layout from \"../../hoc/Layout/Layout\";\n\ninterface Props {\n    query: { title?: string };\n}\n\nconst Index: NextPage<Props> = ({ query }) => {\n    const greetName = query.title ? query.title : 'World';\n    return (\n        <Layout>\n            <div>Hello!!!!!!!!!, {greetName}!</div>\n        </Layout>\n    );\n};\n\nIndex.getInitialProps = async (ctx: NextPageContext) => {\n    const { query } = ctx;\n    return { query };\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}